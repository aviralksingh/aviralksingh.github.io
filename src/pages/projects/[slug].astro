---
import Layout from '../../layouts/Layout.astro';
import MarkdownContent from '../../components/MarkdownContent.astro';

export async function getStaticPaths() {
  // This is where you would typically fetch your project data
  // For now, we'll use a static example
  return [
    {
      params: { slug: 'ecommerce-platform' },
      props: {
        project: {
          title: 'E-commerce Platform',
          description: 'A full-stack e-commerce solution with React, Node.js, and MongoDB.',
          content: `
# E-commerce Platform

## Overview
A modern e-commerce platform built with React, Node.js, and MongoDB. This project demonstrates full-stack development capabilities and modern web architecture.

## Features
- User authentication and authorization
- Product catalog with search and filtering
- Shopping cart functionality
- Payment processing integration
- Order management system
- Admin dashboard

## Technical Stack
- **Frontend**: React, Redux, Tailwind CSS
- **Backend**: Node.js, Express
- **Database**: MongoDB
- **Authentication**: JWT
- **Payment**: Stripe integration
- **Deployment**: AWS, Docker

## Code Example
\`\`\`javascript
// Example of a React component
const ProductCard = ({ product }) => {
  return (
    <div className="product-card">
      <img src={product.image} alt={product.name} />
      <h3>{product.name}</h3>
      <p>{product.price}</p>
      <button onClick={() => addToCart(product)}>
        Add to Cart
      </button>
    </div>
  );
};
\`\`\`

## Project Structure
\`\`\`
project/
├── client/
│   ├── src/
│   │   ├── components/
│   │   ├── pages/
│   │   └── store/
├── server/
│   ├── controllers/
│   ├── models/
│   └── routes/
└── docker/
\`\`\`

## Challenges and Solutions
1. **Performance Optimization**
   - Implemented lazy loading for images
   - Used Redis for caching
   - Optimized database queries

2. **Security**
   - Implemented JWT authentication
   - Added rate limiting
   - Sanitized user inputs

## Future Improvements
- [ ] Add real-time notifications
- [ ] Implement advanced search
- [ ] Add multi-language support
- [ ] Enhance mobile responsiveness

## Links
- [GitHub Repository](https://github.com/yourusername/project)
- [Live Demo](https://demo.example.com)
          `
        }
      }
    },
    {
      params: { slug: 'task-management' },
      props: {
        project: {
          title: 'Task Management App',
          description: 'A collaborative task management application with real-time updates.',
          content: `
# Task Management Application

## Overview
A real-time task management application built with Vue.js and Firebase, enabling teams to collaborate effectively.

## Features
- Real-time updates
- Task assignment and tracking
- Progress monitoring
- Team collaboration
- File attachments
- Notifications

## Technical Details
- Vue.js for frontend
- Firebase for backend
- Real-time database
- Authentication
- Cloud storage

## Screenshots
![Task Board](/project-screenshots/task-board.png)
![Task Details](/project-screenshots/task-details.png)

## Implementation Details
The application uses Firebase's real-time database to ensure instant updates across all connected clients. The architecture follows a component-based design pattern, making it highly maintainable and scalable.

## Future Plans
- [ ] Add calendar integration
- [ ] Implement time tracking
- [ ] Add reporting features
- [ ] Enhance mobile app
          `
        }
      }
    }
  ];
}

const { project } = Astro.props;
---

<Layout title={`${project.title} - Aviral Singh`}>
  <div class="max-w-4xl mx-auto">
    <div class="mb-8">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
        {project.title}
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-300">
        {project.description}
      </p>
    </div>

    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-8">
      <MarkdownContent content={project.content} />
    </div>

    <div class="mt-8 flex justify-between">
      <a
        href="/projects"
        class="inline-flex items-center text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300"
      >
        <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Back to Projects
      </a>
      <a
        href={project.githubUrl}
        target="_blank"
        rel="noopener noreferrer"
        class="inline-flex items-center text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300"
      >
        View on GitHub
        <svg class="w-3 h-3 ml-1" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
        </svg>
      </a>
    </div>
  </div>
</Layout>
